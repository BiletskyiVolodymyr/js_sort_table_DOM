{"version":3,"sources":["scripts/main.js"],"names":["document","addEventListener","tableElement","querySelector","querySelectorAll","forEach","header","index","sortTableByColumn","columnIndex","tbody","rows","sort","a","b","aValue","textContent","bValue","localeCompare","undefined","numeric","row","appendChild"],"mappings":";AAAA,aAEA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAAA,SAASC,iBAAiB,mBAAoB,WACtCC,IAAAA,EAAeF,SAASG,cAAc,SAC5BD,EAAaE,iBAAiB,MAEtCC,QAAQ,SAACC,EAAQC,GACvBD,EAAOL,iBAAiB,QAAS,WAK1BO,IAAyBC,EAC1BC,EACAC,EAF0BF,EAJEF,EAK5BG,EALcR,EAKAC,cAAc,UAC5BQ,EAAWD,EAAAA,EAAMN,iBAAiB,QAEnCQ,KAAK,SAACC,EAAGC,GACNC,IAAAA,EACJF,EAAEV,cAA8BM,gBAAAA,OAAAA,EAAc,EAAMO,MAAAA,YAChDC,EACJH,EAAEX,cAA8BM,gBAAAA,OAAAA,EAAc,EAAMO,MAAAA,YAE/CD,OAAAA,EAAOG,cAAcD,OAAQE,EAAW,CAAEC,SAAS,MAG5DT,EAAKN,QAAQ,SAAAgB,GAAOX,OAAAA,EAAMY,YAAYD","file":"main.5333679a.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  const tableElement = document.querySelector('table');\n  const headers = tableElement.querySelectorAll('th');\n\n  headers.forEach((header, index) => {\n    header.addEventListener('click', () => {\n      sortTableByColumn(tableElement, index);\n    });\n  });\n\n  function sortTableByColumn(table, columnIndex) {\n    const tbody = table.querySelector('tbody');\n    const rows = [...tbody.querySelectorAll('tr')];\n\n    rows.sort((a, b) => {\n      const aValue\n      = a.querySelector(`td:nth-child(${columnIndex + 1})`).textContent;\n      const bValue\n      = b.querySelector(`td:nth-child(${columnIndex + 1})`).textContent;\n\n      return aValue.localeCompare(bValue, undefined, { numeric: true });\n    });\n\n    rows.forEach(row => tbody.appendChild(row));\n  }\n});\n"]}